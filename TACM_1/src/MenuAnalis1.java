
import Koneksi.conek1;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DecimalFormat;
import java.util.Collection;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */

/**
 *
 * @author Acer
 */
public class MenuAnalis1 extends javax.swing.JPanel {
private String username;
private String userId;
private String userIdinvestor;

    /**
     * Creates new form MenuManager
     */
   

    /**
     * Creates new form MenuManager
     */
    
                

    

    /**
     * Creates new form MenuManager
     */
    /**
     * Creates new form MenuManager
     */
    public MenuAnalis1(String username,  String userId, String userIdinvestor) {
        initComponents();
        this.username = username;
        this.userId = userId;
         this.userIdinvestor = userIdinvestor;
        b_detail.setVisible(false);
       
       
        datatable1();
        datatable2();
        
       
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainpane = new javax.swing.JPanel();
        data_proyek = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table1 = new javax.swing.JTable();
        b_detail = new rojerusan.RSMaterialButtonRectangle();
        txtcari = new javax.swing.JTextField();
        b_cari = new rojerusan.RSMaterialButtonRectangle();
        detail_proyek = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        table2 = new javax.swing.JTable();
        b_kembali = new rojerusan.RSMaterialButtonRectangle();
        b_setuju1 = new rojerusan.RSMaterialButtonRectangle();
        b_revisi1 = new rojerusan.RSMaterialButtonRectangle();

        setBorder(javax.swing.BorderFactory.createMatteBorder(0, 2, 0, 0, new java.awt.Color(42, 37, 98)));
        setLayout(new java.awt.CardLayout());

        mainpane.setBackground(new java.awt.Color(255, 255, 255));
        mainpane.setLayout(new java.awt.CardLayout());

        data_proyek.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        jLabel1.setText("DATA PROYEK");

        table1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        table1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table1);

        b_detail.setBackground(new java.awt.Color(42, 37, 98));
        b_detail.setText("Detail");
        b_detail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_detailActionPerformed(evt);
            }
        });

        txtcari.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(42, 37, 98)));

        b_cari.setBackground(new java.awt.Color(42, 37, 98));
        b_cari.setText("cari");
        b_cari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_cariActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout data_proyekLayout = new javax.swing.GroupLayout(data_proyek);
        data_proyek.setLayout(data_proyekLayout);
        data_proyekLayout.setHorizontalGroup(
            data_proyekLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(data_proyekLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(data_proyekLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(data_proyekLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 707, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(data_proyekLayout.createSequentialGroup()
                        .addGroup(data_proyekLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(data_proyekLayout.createSequentialGroup()
                                .addComponent(b_detail, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtcari, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(b_cari, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12))))
        );
        data_proyekLayout.setVerticalGroup(
            data_proyekLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(data_proyekLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(data_proyekLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(b_detail, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtcari, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b_cari, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        mainpane.add(data_proyek, "card2");

        detail_proyek.setBackground(new java.awt.Color(255, 255, 255));

        jLabel3.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        jLabel3.setText("DETAIL PROYEK");

        table2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(table2);

        b_kembali.setBackground(new java.awt.Color(42, 37, 98));
        b_kembali.setText("KEMBALI");
        b_kembali.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_kembaliActionPerformed(evt);
            }
        });

        b_setuju1.setBackground(new java.awt.Color(42, 37, 98));
        b_setuju1.setText("setuju");
        b_setuju1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_setuju1ActionPerformed(evt);
            }
        });

        b_revisi1.setBackground(new java.awt.Color(42, 37, 98));
        b_revisi1.setText("revisi");
        b_revisi1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_revisi1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout detail_proyekLayout = new javax.swing.GroupLayout(detail_proyek);
        detail_proyek.setLayout(detail_proyekLayout);
        detail_proyekLayout.setHorizontalGroup(
            detail_proyekLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(detail_proyekLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(detail_proyekLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(detail_proyekLayout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 707, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(detail_proyekLayout.createSequentialGroup()
                        .addGroup(detail_proyekLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addGroup(detail_proyekLayout.createSequentialGroup()
                                .addComponent(b_setuju1, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(b_revisi1, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(b_kembali, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(12, 447, Short.MAX_VALUE))))
        );
        detail_proyekLayout.setVerticalGroup(
            detail_proyekLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(detail_proyekLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(detail_proyekLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(b_setuju1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b_kembali, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b_revisi1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 298, Short.MAX_VALUE)
                .addContainerGap())
        );

        mainpane.add(detail_proyek, "card2");

        add(mainpane, "card2");
    }// </editor-fold>//GEN-END:initComponents

    private void b_detailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_detailActionPerformed
        mainpane.removeAll();
    mainpane.repaint();
    mainpane.revalidate();

    // Menambahkan panel detail proyek
    mainpane.add(detail_proyek);
    mainpane.repaint();
    mainpane.revalidate();
    
    // Mengambil model tabel dan baris yang dipilih
    DefaultTableModel model = (DefaultTableModel) table1.getModel();
    int row = table1.getSelectedRow();
    
    // Validasi jika baris yang dipilih valid
    if (row >= 0) {
        // Kolom pertama dan kedua
        String id_admin = String.valueOf(table1.getValueAt(row, 1));  // ID Admin
        String id_proyek = String.valueOf(table1.getValueAt(row, 2)); // ID Proyek
        
        // Menyimpan data ke dalam map
        
        

        // Perbarui tampilan dengan data terkait
        // Pastikan fungsi ini ada dan memperbarui data sesuai ID Proyek
    }
     datatable2();
// TODO add your handling code here:
    }//GEN-LAST:event_b_detailActionPerformed

    private void b_cariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_cariActionPerformed
try {
        Statement statement =  conek1.GetConnection().createStatement();
        ResultSet res=statement.executeQuery("select * from transaksi left join status_investor on  transaksi.ID_transaksi = status_investor.id_transaksi where transaksi.nama_proyek like '%" + txtcari.getText() + "%'; ");
        
        DefaultTableModel tbl = new DefaultTableModel();
       
        tbl.addColumn("ID PROYEK");
      tbl.addColumn("NAMA PERUSAHAAN");

    tbl.addColumn("NAMA PROYEK");
    tbl.addColumn("LOKASI PROYEK");
    tbl.addColumn("ESTIMASI");
    tbl.addColumn("TOTAL DANA");
    tbl.addColumn("STATUS");
    
        
                table1.setModel(tbl);
                
                while(res.next())
            {
                tbl.addRow(new Object[] {
                  res.getString("ID_proyek"),
                res.getString("nama_perusahaan"),
                res.getString("nama_proyek"),
                res.getString("lokasi_proyek"),
                res.getString("estimasi_proyek"),
                res.getString("total_dana"),
                 res.getString("status_analis")
                   
                });
                 table1.setModel(tbl);
            }
        }catch (Exception e) {
            JOptionPane.showMessageDialog(this,"salah");
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_b_cariActionPerformed

    private void b_kembaliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_kembaliActionPerformed
        mainpane.removeAll();
        mainpane.repaint();
        mainpane.revalidate();
        
        mainpane.add(data_proyek);
        mainpane.repaint();
        mainpane.revalidate();
        datatable1();
        // TODO add your handling code here:
    }//GEN-LAST:event_b_kembaliActionPerformed

    private void table1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table1MouseClicked
b_detail.setVisible(true);
 
        // TODO add your handling code here:
    }//GEN-LAST:event_table1MouseClicked

    private void b_setuju1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_setuju1ActionPerformed
int row = table2.getSelectedRow();
        if (row >= 0) {
            // Ambil data dari baris yang dipilih dan set ke dalam form (misalnya textfield)
            String id_proyek = (String)table2.getValueAt(row, 1);

            try {

                // Simpan ke database
                Statement statement = conek1.GetConnection().createStatement();
                String sql = "Update `status_investor` set status_analis = 'Disetujui' where id_proyek = '" + id_proyek +"';";

                statement.executeUpdate(sql);
                statement.close();

                // Notifikasi sukses

                JOptionPane.showMessageDialog(null, "Proyek Berhasil Disetujui");

                // Reset ke pilihan default
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "Data gagal disimpan: " + e.getMessage());
            }

        }else {
            JOptionPane.showMessageDialog(this, "Pilih data yang ingin diubah terlebih dahulu!", "Peringatan", JOptionPane.WARNING_MESSAGE);
        }

        datatable2();
        datatable1();
        // TODO add your handling code here:
    }//GEN-LAST:event_b_setuju1ActionPerformed

    private void b_revisi1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_revisi1ActionPerformed
int row = table2.getSelectedRow();
        if (row >= 0) {
            // Ambil data dari baris yang dipilih dan set ke dalam form (misalnya textfield)
            String id_proyek = (String)table2.getValueAt(row, 1);

            try {

                // Simpan ke database
                Statement statement = conek1.GetConnection().createStatement();
                String sql = "Update `status_investor` set status_analis = 'Revisi' where id_proyek = '" + id_proyek +"';";

                statement.executeUpdate(sql);
                statement.close();

                // Notifikasi sukses

                JOptionPane.showMessageDialog(null, "Revisi Dikirim");

                // Reset ke pilihan default
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "Data gagal disimpan: " + e.getMessage());
            }

        }else {
            JOptionPane.showMessageDialog(this, "Pilih data yang ingin diubah terlebih dahulu!", "Peringatan", JOptionPane.WARNING_MESSAGE);
        }
        datatable2();
        datatable1();
        // TODO add your handling code here:
    }//GEN-LAST:event_b_revisi1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private rojerusan.RSMaterialButtonRectangle b_cari;
    private rojerusan.RSMaterialButtonRectangle b_detail;
    private rojerusan.RSMaterialButtonRectangle b_kembali;
    private rojerusan.RSMaterialButtonRectangle b_revisi1;
    private rojerusan.RSMaterialButtonRectangle b_setuju1;
    private javax.swing.JPanel data_proyek;
    private javax.swing.JPanel detail_proyek;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JPanel mainpane;
    private javax.swing.JTable table1;
    private javax.swing.JTable table2;
    private javax.swing.JTextField txtcari;
    // End of variables declaration//GEN-END:variables

    private void datatable1() {
       
       DefaultTableModel tbl = new DefaultTableModel();
  
        tbl.addColumn("ID PROYEK");
      tbl.addColumn("NAMA PERUSAHAAN");

    tbl.addColumn("NAMA PROYEK");
    tbl.addColumn("LOKASI PROYEK");
    tbl.addColumn("ESTIMASI");
    tbl.addColumn("TOTAL DANA");
    tbl.addColumn("STATUS");
   
   
    table1.setModel(tbl);
    
    try {
                DecimalFormat df = new DecimalFormat("#,###");

        Statement statement =conek1.GetConnection().createStatement();
        ResultSet res = statement.executeQuery("select * from transaksi join status_investor on  transaksi.ID_transaksi= status_investor.id_transaksi where transaksi.id_investor = '" + userIdinvestor + "';");
        while (res.next()) {
            
            tbl.addRow(new Object[]{
               res.getString("ID_proyek"),
                res.getString("nama_perusahaan"),
                res.getString("nama_proyek"),
                res.getString("lokasi_proyek"),
                res.getString("estimasi_proyek"),
                res.getString("total_dana"),
                 res.getString("status_analis")
                 
                    
               
            });
        }
    } catch (Exception e) {
        e.printStackTrace(); 
          JOptionPane.showMessageDialog(this, "Gagal memuat data: " + e.getMessage());  
       
    }   }

   private void datatable2() {
    // Pastikan tableDataMap tidak kosong
    
        // Menyiapkan table model
        DefaultTableModel tbl = new DefaultTableModel();
                tbl.addColumn("ID TRANSAKSI");

        tbl.addColumn("ID PROYEK");
        tbl.addColumn("ID DANA");
        tbl.addColumn("DANA");
        tbl.addColumn("TOTAL");
        tbl.addColumn("STATUS");

        // Set table model untuk table2
        table2.setModel(tbl);

        try {
            // Membuat statement dari koneksi
            Statement statement = conek1.GetConnection().createStatement();

                          DecimalFormat df = new DecimalFormat("#,###");

                 ResultSet res = statement.executeQuery("select * from transaksi  join danaproyek on  transaksi.ID_proyek = danaproyek.id_proyek left join status_investor on transaksi.id_transaksi = status_investor.id_transaksi where transaksi.id_investor = '" + userIdinvestor + "'; ");
  

            // Menambahkan data ke dalam table model
            while (res.next()) {
                            long totalDana = res.getLong("total");

                tbl.addRow(new Object[]{
                                        res.getString("id_transaksi"),

                    res.getString("id_proyek"),
                    res.getString("id_dana"),
                    res.getString("dana"),
                    df.format(totalDana),
                    res.getString("status_analis")
                });
            }

            // Menutup result set dan statement
            res.close();
            statement.close();
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Gagal memuat data: " + e.getMessage());
        }
    
}

    
}

