
import java.sql.Statement;
import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import Koneksi.conek1;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;


/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */

/**
 *
 * @author Acer
 */
public class MenuDanaProyek extends javax.swing.JPanel {
private String username;
private String userId;
private String userIdP;

 HashMap<String, String> tableDataMap = new HashMap<>();
private HashMap<String, String> manajer = new HashMap<>();
    
    /**
     * Creates new form MenuDanaProyek
     */
    public MenuDanaProyek(String username, String userId,String userIdP) {
        initComponents();
         this.username = username;
                this.userId = userId;
                                this.userIdP = userIdP;

        b_detail.setVisible(false);
        b_Ajukan.setVisible(false);
        cmbManajer.setVisible(false);
        datatable1();
          
        
   
         datatable2();
         loadManajer();
    }
    
    private void loadManajer() {
          try {
            // Membuat statement dari koneksi
            Statement stmt = conek1.GetConnection().createStatement();
            
            // Query untuk mendapatkan ID dan nama admin
            String sql = "SELECT id_manajer, Nama FROM manajer where id_perusahaan ='"+userIdP+"';" ;
            ResultSet rs = stmt.executeQuery(sql);
            
            // Tambahkan pilihan default ke dropdown
            cmbManajer.addItem("- Pilih Manajer -");
            
            // Tambahkan admin ke dropdown dan HashMap
            while (rs.next()) {
                String idManajer = rs.getString("id_manajer"); // ID bertipe String
                String namaManajer = rs.getString("Nama");
                cmbManajer.addItem(namaManajer);         // Tambahkan nama admin ke dropdown
                manajer.put(namaManajer, idManajer);
                
            }
            
            // Menutup statement
            stmt.close();
           
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Gagal terhubung ke database: " + e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainpane = new javax.swing.JPanel();
        data_proyek = new javax.swing.JPanel();
        b_detail = new rojerusan.RSMaterialButtonRectangle();
        jLabel1 = new javax.swing.JLabel();
        txtcari = new javax.swing.JTextField();
        b_cari = new rojerusan.RSMaterialButtonRectangle();
        jScrollPane1 = new javax.swing.JScrollPane();
        table1 = new javax.swing.JTable();
        b_Ajukan = new rojerusan.RSMaterialButtonRectangle();
        cmbManajer = new javax.swing.JComboBox<>();
        tambah_dana = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        b_simpan = new rojerusan.RSMaterialButtonRectangle();
        b_update = new rojerusan.RSMaterialButtonRectangle();
        b_simpan2 = new rojerusan.RSMaterialButtonRectangle();
        jLabel6 = new javax.swing.JLabel();
        txtkodedana = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtnamadana = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txttotaldana = new javax.swing.JTextField();
        Detail_proyek = new javax.swing.JPanel();
        b_tambah = new rojerusan.RSMaterialButtonRectangle();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        table2 = new javax.swing.JTable();
        b_hapus = new rojerusan.RSMaterialButtonRectangle();
        b_ubah = new rojerusan.RSMaterialButtonRectangle();
        b_keluar = new rojerusan.RSMaterialButtonRectangle();
        txtcari1 = new javax.swing.JTextField();
        b_cari1 = new rojerusan.RSMaterialButtonRectangle();

        setLayout(new java.awt.CardLayout());

        mainpane.setBackground(new java.awt.Color(255, 255, 255));
        mainpane.setLayout(new java.awt.CardLayout());

        data_proyek.setBackground(new java.awt.Color(255, 255, 255));

        b_detail.setBackground(new java.awt.Color(42, 37, 98));
        b_detail.setText("detail");
        b_detail.setFont(new java.awt.Font("Roboto Medium", 0, 12)); // NOI18N
        b_detail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_detailActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jLabel1.setText("DATA PROYEK");

        txtcari.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(42, 37, 98)));
        txtcari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtcariActionPerformed(evt);
            }
        });

        b_cari.setBackground(new java.awt.Color(42, 37, 98));
        b_cari.setText("CARI");
        b_cari.setFont(new java.awt.Font("Roboto Medium", 0, 12)); // NOI18N
        b_cari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_cariActionPerformed(evt);
            }
        });

        table1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        table1.setGridColor(new java.awt.Color(0, 0, 255));
        table1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table1);

        b_Ajukan.setBackground(new java.awt.Color(42, 37, 98));
        b_Ajukan.setText("Ajukan");
        b_Ajukan.setFont(new java.awt.Font("Roboto Medium", 0, 12)); // NOI18N
        b_Ajukan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_AjukanActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout data_proyekLayout = new javax.swing.GroupLayout(data_proyek);
        data_proyek.setLayout(data_proyekLayout);
        data_proyekLayout.setHorizontalGroup(
            data_proyekLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(data_proyekLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(data_proyekLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(data_proyekLayout.createSequentialGroup()
                        .addComponent(b_detail, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(b_Ajukan, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtcari, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(b_cari, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 591, Short.MAX_VALUE)
                    .addGroup(data_proyekLayout.createSequentialGroup()
                        .addGroup(data_proyekLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(cmbManajer, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        data_proyekLayout.setVerticalGroup(
            data_proyekLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(data_proyekLayout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(data_proyekLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(b_detail, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtcari, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b_cari, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b_Ajukan, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cmbManajer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 290, Short.MAX_VALUE)
                .addGap(20, 20, 20))
        );

        mainpane.add(data_proyek, "card2");

        tambah_dana.setBackground(new java.awt.Color(255, 255, 255));

        jLabel3.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jLabel3.setText("TAMBAH DANA PROYEK");

        b_simpan.setBackground(new java.awt.Color(42, 37, 98));
        b_simpan.setText("simpan");
        b_simpan.setFont(new java.awt.Font("Roboto Medium", 0, 12)); // NOI18N
        b_simpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_simpanActionPerformed(evt);
            }
        });

        b_update.setBackground(new java.awt.Color(42, 37, 98));
        b_update.setText("UPDATE");
        b_update.setFont(new java.awt.Font("Roboto Medium", 0, 12)); // NOI18N
        b_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_updateActionPerformed(evt);
            }
        });

        b_simpan2.setBackground(new java.awt.Color(42, 37, 98));
        b_simpan2.setText("KELUAR");
        b_simpan2.setFont(new java.awt.Font("Roboto Medium", 0, 12)); // NOI18N
        b_simpan2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_simpan2ActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        jLabel6.setText("KODE DANA");

        txtkodedana.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(42, 37, 98)));

        jLabel7.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        jLabel7.setText("NAMA DANA");

        txtnamadana.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(42, 37, 98)));

        jLabel8.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        jLabel8.setText("TOTAL DANA");

        txttotaldana.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(42, 37, 98)));

        javax.swing.GroupLayout tambah_danaLayout = new javax.swing.GroupLayout(tambah_dana);
        tambah_dana.setLayout(tambah_danaLayout);
        tambah_danaLayout.setHorizontalGroup(
            tambah_danaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tambah_danaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tambah_danaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tambah_danaLayout.createSequentialGroup()
                        .addGroup(tambah_danaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8))
                        .addGap(356, 523, Short.MAX_VALUE))
                    .addGroup(tambah_danaLayout.createSequentialGroup()
                        .addGroup(tambah_danaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtkodedana, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtnamadana, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txttotaldana)
                            .addGroup(tambah_danaLayout.createSequentialGroup()
                                .addGroup(tambah_danaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addGroup(tambah_danaLayout.createSequentialGroup()
                                        .addComponent(b_simpan, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(b_update, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(b_simpan2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())))
        );
        tambah_danaLayout.setVerticalGroup(
            tambah_danaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tambah_danaLayout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(tambah_danaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(b_simpan, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b_update, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b_simpan2, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtkodedana, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtnamadana, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel8)
                .addGap(12, 12, 12)
                .addComponent(txttotaldana, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(86, Short.MAX_VALUE))
        );

        mainpane.add(tambah_dana, "card2");

        Detail_proyek.setBackground(new java.awt.Color(255, 255, 255));

        b_tambah.setBackground(new java.awt.Color(42, 37, 98));
        b_tambah.setText("TAMBAH");
        b_tambah.setFont(new java.awt.Font("Roboto Medium", 0, 12)); // NOI18N
        b_tambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_tambahActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jLabel2.setText("DETAIL DANA PROYEK");

        table2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        table2.setGridColor(new java.awt.Color(0, 0, 255));
        table2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table2MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(table2);

        b_hapus.setBackground(new java.awt.Color(42, 37, 98));
        b_hapus.setText("HAPUS");
        b_hapus.setFont(new java.awt.Font("Roboto Medium", 0, 12)); // NOI18N
        b_hapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_hapusActionPerformed(evt);
            }
        });

        b_ubah.setBackground(new java.awt.Color(42, 37, 98));
        b_ubah.setText("EDIT");
        b_ubah.setFont(new java.awt.Font("Roboto Medium", 0, 12)); // NOI18N
        b_ubah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_ubahActionPerformed(evt);
            }
        });

        b_keluar.setBackground(new java.awt.Color(42, 37, 98));
        b_keluar.setText("KEluar");
        b_keluar.setFont(new java.awt.Font("Roboto Medium", 0, 12)); // NOI18N
        b_keluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_keluarActionPerformed(evt);
            }
        });

        txtcari1.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(42, 37, 98)));

        b_cari1.setBackground(new java.awt.Color(42, 37, 98));
        b_cari1.setText("cari");
        b_cari1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_cari1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Detail_proyekLayout = new javax.swing.GroupLayout(Detail_proyek);
        Detail_proyek.setLayout(Detail_proyekLayout);
        Detail_proyekLayout.setHorizontalGroup(
            Detail_proyekLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Detail_proyekLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Detail_proyekLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Detail_proyekLayout.createSequentialGroup()
                        .addGroup(Detail_proyekLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(Detail_proyekLayout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(Detail_proyekLayout.createSequentialGroup()
                        .addComponent(b_tambah, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(b_hapus, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(b_ubah, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(b_keluar, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtcari1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(b_cari1, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(23, 23, 23))))
        );
        Detail_proyekLayout.setVerticalGroup(
            Detail_proyekLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Detail_proyekLayout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Detail_proyekLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Detail_proyekLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtcari1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(b_cari1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(Detail_proyekLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(b_tambah, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(b_hapus, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(b_ubah, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(b_keluar, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(26, 26, 26)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(46, Short.MAX_VALUE))
        );

        mainpane.add(Detail_proyek, "card2");

        add(mainpane, "card2");
    }// </editor-fold>//GEN-END:initComponents

    private void b_detailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_detailActionPerformed
       mainpane.removeAll();
    mainpane.repaint();
    mainpane.revalidate();

    // Menambahkan panel detail proyek
    mainpane.add(Detail_proyek);
    mainpane.repaint();
    mainpane.revalidate();
    
    // Mengambil model tabel dan baris yang dipilih
    DefaultTableModel model = (DefaultTableModel) table1.getModel();
    int row = table1.getSelectedRow();
    
    // Validasi jika baris yang dipilih valid
    if (row >= 0) {
        // Kolom pertama dan kedua
        String id_admin = String.valueOf(table1.getValueAt(row, 1));  // ID Admin
        String id_proyek = String.valueOf(table1.getValueAt(row, 2)); // ID Proyek
        
        // Menyimpan data ke dalam map
        tableDataMap.put(id_admin, id_proyek);

        // Perbarui tampilan dengan data terkait
        // Pastikan fungsi ini ada dan memperbarui data sesuai ID Proyek
    }
     datatable2();   

        // TODO add your handling code here:
    }//GEN-LAST:event_b_detailActionPerformed

    private void txtcariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtcariActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtcariActionPerformed

    private void b_cariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_cariActionPerformed
        try {
            
            Statement statement =  conek1.GetConnection().createStatement();
            ResultSet res=statement.executeQuery("select * from PROYEK join pelaksana on proyek.id_pelaksana "
                    + "= pelaksana.id_pelaksana where proyek.nama_proyek like '%" + txtcari.getText() + "%'; ");
            DefaultTableModel tbl = new DefaultTableModel();
            tbl.addColumn("ID PELAKSANA");
   tbl.addColumn("ID ADMIN");
        tbl.addColumn("ID PROYEK");
  
    tbl.addColumn("NAMA PROYEK");
    tbl.addColumn("LOKASI PROYEK");
    tbl.addColumn("ESTIMASI");
    tbl.addColumn("STATUS");
    
            table1.setModel(tbl);

            while(res.next())
            {
                tbl.addRow(new Object[] {
                   res.getString("id_pelaksana"),
                res.getString("id_admin"),
               res.getString("id"),
                res.getString("nama_proyek"),
                res.getString("lokasi"),
                res.getString("estimasi"),
                 res.getString("status")

                });
                table1.setModel(tbl);
            }
        }catch (Exception e) {
            JOptionPane.showMessageDialog(this,"salah");
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_b_cariActionPerformed

    private void table1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table1MouseClicked

        b_Ajukan.setVisible(true);
        b_detail.setVisible(true);
         cmbManajer.setVisible(true);
       

        // TODO add your handling code here:
    }//GEN-LAST:event_table1MouseClicked

    private void b_tambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_tambahActionPerformed
 mainpane.removeAll();
        mainpane.repaint();
        mainpane.revalidate();
        
        mainpane.add(tambah_dana);
        mainpane.repaint();
        mainpane.revalidate();
        b_update.setVisible(false);
         b_simpan.setVisible(true);
              // TODO add your handling code here:
    }//GEN-LAST:event_b_tambahActionPerformed

    private void table2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table2MouseClicked
  b_tambah.setVisible(true);
            b_hapus.setVisible(true); // Sembunyikan tombol hapus
            b_keluar.setVisible(true); 
             b_ubah.setVisible(true); 
        // TODO add your handling code here:
    }//GEN-LAST:event_table2MouseClicked

    private void b_AjukanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_AjukanActionPerformed
         String manajerDipilih = (String) cmbManajer.getSelectedItem(); // Nama admin
    String idmanajer = manajer.get(manajerDipilih);

    // Validasi manajer yang dipilih
    if (manajerDipilih == null || manajerDipilih.trim().isEmpty()) {
        JOptionPane.showMessageDialog(null, "Pilih Manajer Terlebih Dahulu.");
        return;
    }

    // Ambil baris yang dipilih di tabel
    DefaultTableModel model = (DefaultTableModel) table1.getModel();
    int row = table1.getSelectedRow();
    if (row == -1) {
        JOptionPane.showMessageDialog(null, "Pilih baris dalam tabel terlebih dahulu.");
        return;
    }
    
    // Ambil ID proyek dari kolom tertentu
    String id = (String) table1.getValueAt(row, 2);

    // Validasi ID proyek dan ID manajer
    
        System.out.println(id);
    try {
        // Koneksi ke database
        Statement stmt = conek1.GetConnection().createStatement();

        // Query untuk memeriksa apakah dana proyek telah terisi
        String queryCheck = "SELECT Dana FROM danaproyek WHERE id_proyek = '" + id + "';";
        ResultSet rs = stmt.executeQuery(queryCheck);

        if (rs.next()) {
            // Ambil nilai "Dana" dari hasil query
            String danaTerkumpul = rs.getString("Dana");

            // Periksa apakah nilai "Dana" kosong
            if (danaTerkumpul == null || danaTerkumpul.trim().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Data 'Dana Proyek' belum terisi. Tidak dapat diajukan.");
                return;
            }

            // Jika "Dana" telah terisi, update status proyek
            String queryUpdate = "UPDATE proyek SET status = 'Diajukan ke Manajer', id_manajer = '" + idmanajer + "' WHERE id = '" + id + "'";
            stmt.executeUpdate(queryUpdate);

            JOptionPane.showMessageDialog(null, "Proyek berhasil diajukan.");

        }
        else {
                           JOptionPane.showMessageDialog(null, "Data 'Dana Proyek' belum terisi. Tidak dapat diajukan.");

        }
    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(null, "Error: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }
datatable1();
    
        // TODO add your handling code here:
    }//GEN-LAST:event_b_AjukanActionPerformed

    private void b_hapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_hapusActionPerformed
 int row = table2.getSelectedRow();  // Mengambil indeks baris yang dipilih
    if (row >= 0) {
        // Tampilkan konfirmasi sebelum menghapus
        int confirm = JOptionPane.showConfirmDialog(this, "Apakah Anda yakin ingin menghapus data ini?", 
                "Konfirmasi Hapus", JOptionPane.YES_NO_OPTION);
        if (confirm == JOptionPane.YES_OPTION) {
            // Mendapatkan ID yang terkait dengan baris yang dipilih
            String id = (String) table2.getValueAt(row, 1);  // Misalnya ID berada di kolom pertama (indeks 0)

            // Menghapus data dari tabel (model tabel)
            DefaultTableModel model = (DefaultTableModel) table2.getModel();
            model.removeRow(row);  // Menghapus baris yang dipilih dari model

            // Menghapus data dari database
            hapusDataDariDatabase(id);

            // Atur ulang tampilan tombol setelah penghapusan
           b_tambah.setVisible(false);
            b_hapus.setVisible(false); // Sembunyikan tombol hapus
            b_keluar.setVisible(false); 
             b_ubah.setVisible(false); 
// Sembunyikan tombol batal
        }
    } else {
        JOptionPane.showMessageDialog(this, "Pilih data yang ingin dihapus terlebih dahulu!", "Peringatan",
                JOptionPane.WARNING_MESSAGE);
    }
        // TODO add your handling code here:
    }//GEN-LAST:event_b_hapusActionPerformed

    private void b_ubahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_ubahActionPerformed
 mainpane.removeAll();
    mainpane.repaint();
    mainpane.revalidate();
    
    mainpane.add(tambah_dana);
    mainpane.repaint();
    mainpane.revalidate();
    
    // Set tombol yang akan ditampilkan
    b_simpan.setVisible(false);
    b_update.setVisible(true);

    // Ambil data baris yang dipilih di tabel
    int row = table2.getSelectedRow();
    if (row >= 0) {
        // Ambil data dari baris yang dipilih dan set ke dalam form (misalnya textfield)
        String id = (String)table2.getValueAt(row, 1);
        String Dana = table2.getValueAt(row, 2).toString();  // Misalnya kolom 1 berisi nama
          String Total = table2.getValueAt(row, 3).toString();
          String id_proyek = table2.getValueAt(row, 0).toString();
        // Isi data ke form edit (sesuaikan dengan komponen form Anda)
          txtkodedana.setText(String.valueOf(id));
        txtnamadana.setText(String.valueOf(Dana));   // Misalnya field untuk ID
        txttotaldana.setText(Total); 
          
        // Misalnya field untuk nama
    } else {
        JOptionPane.showMessageDialog(this, "Pilih data yang ingin diubah terlebih dahulu!", "Peringatan", JOptionPane.WARNING_MESSAGE);
    }        // TODO add your handling code here:
    }//GEN-LAST:event_b_ubahActionPerformed

    private void b_keluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_keluarActionPerformed
 mainpane.removeAll();
        mainpane.repaint();
        mainpane.revalidate();
        
        mainpane.add(data_proyek);
        mainpane.repaint();
        mainpane.revalidate();
        
        datatable1();        // TODO add your handling code here:
    }//GEN-LAST:event_b_keluarActionPerformed

    private void b_simpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_simpanActionPerformed
         String nama = txtnamadana.getText();
    String total = txttotaldana.getText();
    String kode = txtkodedana.getText();
    
    if (!tableDataMap.isEmpty()) {
        // Mengambil satu ID proyek dari HashMap
        String idProyek = tableDataMap.values().iterator().next();

    // Validasi input
    if (nama.isEmpty() || total.isEmpty() || kode.isEmpty() ) {
        JOptionPane.showMessageDialog(null, "Semua field harus diisi dan admin harus dipilih.");
        return;
    }
   

    try {
        // Simpan ke database
        Statement statement = conek1.GetConnection().createStatement();
      String sql = "INSERT INTO danaproyek (id_dana, dana, total, id_proyek) VALUES ('" 
            + kode + "', '" 
            + nama + "', '" 
            + total + "', '" 
            + idProyek +  
           "')";


        statement.executeUpdate(sql);
        statement.close();

        // Notifikasi sukses
       
        JOptionPane.showMessageDialog(null, "Data berhasil disimpan");

        // Kosongkan field input
        txtnamadana.setText("");
        txttotaldana.setText("");
        txtkodedana.setText("");
 
        // Reset ke pilihan default
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Data gagal disimpan: " + e.getMessage());
    }
    }
   
 

      
        // TODO add your handling code here:
    }//GEN-LAST:event_b_simpanActionPerformed

    private void b_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_updateActionPerformed
  String namadana = txtnamadana.getText();
String totaldana = txttotaldana.getText();


   

    // Perbarui data di tabel
    DefaultTableModel model = (DefaultTableModel) table2.getModel();
    int row = table2.getSelectedRow();
    if (row >= 0) {
         String id = (String)table2.getValueAt(row, 1);
       model.setValueAt(namadana, row, 2);  // Perbarui nama proyek di kolom 1
        model.setValueAt(totaldana, row, 3); // Perbarui lokasi proyek di kolom 2
        
        
 updateDataInDatabase(id, namadana, totaldana);// Perbarui nama di kolom 1
    }

    // Sembunyikan form setelah update
    b_simpan.setVisible(true);
    b_update.setVisible(false);
    mainpane.removeAll();
    mainpane.add(Detail_proyek);
    mainpane.repaint();
    mainpane.revalidate();
    }//GEN-LAST:event_b_updateActionPerformed

    private void b_simpan2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_simpan2ActionPerformed
   mainpane.removeAll();
        mainpane.repaint();
        mainpane.revalidate();
        
        mainpane.add(Detail_proyek);
        mainpane.repaint();
        mainpane.revalidate();
        
        datatable2();       // TODO add your handling code here:
    }//GEN-LAST:event_b_simpan2ActionPerformed

    private void b_cari1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_cari1ActionPerformed
        try {
            Statement statement =  conek1.GetConnection().createStatement();
            ResultSet res=statement.executeQuery("select * from danaproyek where Dana like '%" 
                    + txtcari.getText() +"%'; ");
            DefaultTableModel tbl = new DefaultTableModel();
            tbl.addColumn("ID PROYEK");
        tbl.addColumn("ID DANA");
  
    tbl.addColumn("DANA");
    tbl.addColumn("TOTAL");

            table1.setModel(tbl);

            while(res.next())
            {
                tbl.addRow(new Object[] {
                    res.getString("id_proyek"),
                  res.getString("id_dana"),
                res.getString("dana"),
               res.getString("total")

                });
                table1.setModel(tbl);
            }
        }catch (Exception e) {
            JOptionPane.showMessageDialog(this,"salah");
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_b_cari1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Detail_proyek;
    private rojerusan.RSMaterialButtonRectangle b_Ajukan;
    private rojerusan.RSMaterialButtonRectangle b_cari;
    private rojerusan.RSMaterialButtonRectangle b_cari1;
    private rojerusan.RSMaterialButtonRectangle b_detail;
    private rojerusan.RSMaterialButtonRectangle b_hapus;
    private rojerusan.RSMaterialButtonRectangle b_keluar;
    private rojerusan.RSMaterialButtonRectangle b_simpan;
    private rojerusan.RSMaterialButtonRectangle b_simpan2;
    private rojerusan.RSMaterialButtonRectangle b_tambah;
    private rojerusan.RSMaterialButtonRectangle b_ubah;
    private rojerusan.RSMaterialButtonRectangle b_update;
    private javax.swing.JComboBox<String> cmbManajer;
    private javax.swing.JPanel data_proyek;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel mainpane;
    private javax.swing.JTable table1;
    private javax.swing.JTable table2;
    private javax.swing.JPanel tambah_dana;
    private javax.swing.JTextField txtcari;
    private javax.swing.JTextField txtcari1;
    private javax.swing.JTextField txtkodedana;
    private javax.swing.JTextField txtnamadana;
    private javax.swing.JTextField txttotaldana;
    // End of variables declaration//GEN-END:variables

    private void datatable1() {
         DefaultTableModel tbl = new DefaultTableModel();
  tbl.addColumn("ID PELAKSANA");
   tbl.addColumn("ID ADMIN");
        tbl.addColumn("ID PROYEK");
  
    tbl.addColumn("NAMA PROYEK");
    tbl.addColumn("LOKASI PROYEK");
    tbl.addColumn("ESTIMASI");
    tbl.addColumn("STATUS");
   
   
    table1.setModel(tbl);
    
    try {
        Statement statement =conek1.GetConnection().createStatement();
        ResultSet res = statement.executeQuery("select * from PROYEK join pelaksana on proyek.id_pelaksana = pelaksana.id_pelaksana where proyek.id_admin = '" + userId + "'; ");
        
        while (res.next()) {
            tbl.addRow(new Object[]{
                res.getString("id_pelaksana"),
                res.getString("id_admin"),
               res.getString("id"),
                res.getString("nama_proyek"),
                res.getString("lokasi"),
                res.getString("estimasi"),
                 res.getString("status")
                 
                    
               
            });
        }
    } catch (Exception e) {
        e.printStackTrace(); 
          JOptionPane.showMessageDialog(this, "Gagal memuat data: " + e.getMessage());  
       
    }  
    }

    private void datatable2() {
        
        if (!tableDataMap.isEmpty()) {
        // Mengambil satu ID proyek dari HashMap
        String idProyek = tableDataMap.values().iterator().next();

       
        DefaultTableModel tbl = new DefaultTableModel();

   
        tbl.addColumn("ID PROYEK");
        tbl.addColumn("ID DANA");
  
    tbl.addColumn("DANA");
    tbl.addColumn("TOTAL");
    
   
   
    table2.setModel(tbl);
    
    try {
        Statement statement =conek1.GetConnection().createStatement(); 
        ResultSet res = statement.executeQuery("select * from danaproyek where id_proyek = '" + idProyek +"'; ");
        
        while (res.next()) {
            tbl.addRow(new Object[]{
               
                res.getString("id_proyek"),
                  res.getString("id_dana"),
                res.getString("dana"),
               res.getString("total")
               
                 
                    
               
            });
            
        }
        res.close();
    statement.close();
    } catch (Exception e) {
        e.printStackTrace(); 
          JOptionPane.showMessageDialog(this, "Gagal memuat data: " + e.getMessage());  
       
    }
        }
    }

    private void hapusDataDariDatabase(String id) {
        String query = "DELETE FROM danaproyek WHERE  id_dana = '" + id +  "';";
        try ( Statement stmt =conek1.GetConnection().createStatement();
                ) {
            stmt.executeUpdate(query);  // Eksekusi query untuk menghapus data
        } catch (SQLException e) {
            e.printStackTrace();  // Menampilkan error jika ada masalah
        }
    }

    private void updateDataInDatabase(String id, String namadana, String totaldana) {
           try {
        // Query SQL untuk update data
        String query = "UPDATE danaproyek SET  dana = '" + namadana + "', total = '" + totaldana +  "' WHERE ID_dana = '" + id+ "';";
        
        // Gunakan Statement untuk menjalankan query
         Statement stmt =conek1.GetConnection().createStatement();
        stmt.executeUpdate(query); 
         JOptionPane.showMessageDialog(null, "Data berhasil diupdate");// Menjalankan query untuk memperbarui data
    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(this, "Error updating data: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }
    }

   

}