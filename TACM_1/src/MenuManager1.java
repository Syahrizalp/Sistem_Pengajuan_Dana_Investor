
import Koneksi.conek1;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DecimalFormat;
import java.util.Collection;
import java.util.HashMap;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */

/**
 *
 * @author Acer
 */
public class MenuManager1 extends javax.swing.JPanel {
private String username;
private String userId;
HashMap<String, String> tableDataMap = new HashMap<>();


    /**
     * Creates new form MenuManager
     */
   

    /**
     * Creates new form MenuManager
     */
    public MenuManager1(String username, String userId) {
        initComponents();
        this.username = username;
         this.userId = userId;
        b_detail.setVisible(false);
         b_setuju.setVisible(false);
          b_revisi.setVisible(false);
           b_tolak.setVisible(false);
         
            b_ubah.setVisible(false);
        b_selesai.setVisible(false);
        b_keluar.setVisible(false);
        b_update.setVisible(false);
        datatable1();
                datatable2();
                  datatable3();
               
                 
                

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainpane = new javax.swing.JPanel();
        data_proyek = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table1 = new javax.swing.JTable();
        b_detail = new rojerusan.RSMaterialButtonRectangle();
        txtcari = new javax.swing.JTextField();
        b_cari = new rojerusan.RSMaterialButtonRectangle();
        b_revisi = new rojerusan.RSMaterialButtonRectangle();
        b_setuju = new rojerusan.RSMaterialButtonRectangle();
        b_tolak = new rojerusan.RSMaterialButtonRectangle();
        detail_proyek = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        table2 = new javax.swing.JTable();
        b_kembali = new rojerusan.RSMaterialButtonRectangle();
        b_step = new rojerusan.RSMaterialButtonRectangle();
        tambah_step = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        b_tambah = new rojerusan.RSMaterialButtonRectangle();
        b_kembali2 = new rojerusan.RSMaterialButtonRectangle();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtstep = new javax.swing.JTextField();
        txt_target = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtid2 = new javax.swing.JTextField();
        b_update = new rojerusan.RSMaterialButtonRectangle();
        detail_step = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        table3 = new javax.swing.JTable();
        b_keluar = new rojerusan.RSMaterialButtonRectangle();
        b_tambah1 = new rojerusan.RSMaterialButtonRectangle();
        b_ubah = new rojerusan.RSMaterialButtonRectangle();
        b_selesai = new rojerusan.RSMaterialButtonRectangle();

        setBorder(javax.swing.BorderFactory.createMatteBorder(0, 2, 0, 0, new java.awt.Color(42, 37, 98)));
        setLayout(new java.awt.CardLayout());

        mainpane.setBackground(new java.awt.Color(255, 255, 255));
        mainpane.setLayout(new java.awt.CardLayout());

        data_proyek.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        jLabel1.setText("DATA PROYEK");

        table1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        table1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table1);

        b_detail.setBackground(new java.awt.Color(42, 37, 98));
        b_detail.setText("Detail");
        b_detail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_detailActionPerformed(evt);
            }
        });

        txtcari.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(42, 37, 98)));

        b_cari.setBackground(new java.awt.Color(42, 37, 98));
        b_cari.setText("cari");
        b_cari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_cariActionPerformed(evt);
            }
        });

        b_revisi.setBackground(new java.awt.Color(42, 37, 98));
        b_revisi.setText("REVISI");
        b_revisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_revisiActionPerformed(evt);
            }
        });

        b_setuju.setBackground(new java.awt.Color(42, 37, 98));
        b_setuju.setText("SETUJUI");
        b_setuju.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_setujuActionPerformed(evt);
            }
        });

        b_tolak.setBackground(new java.awt.Color(42, 37, 98));
        b_tolak.setText("TOLAK");
        b_tolak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_tolakActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout data_proyekLayout = new javax.swing.GroupLayout(data_proyek);
        data_proyek.setLayout(data_proyekLayout);
        data_proyekLayout.setHorizontalGroup(
            data_proyekLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(data_proyekLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(data_proyekLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(data_proyekLayout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())
                    .addGroup(data_proyekLayout.createSequentialGroup()
                        .addGroup(data_proyekLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(data_proyekLayout.createSequentialGroup()
                                .addComponent(b_detail, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(b_setuju, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(b_revisi, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(b_tolak, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 171, Short.MAX_VALUE)
                                .addComponent(txtcari, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(b_cari, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12))))
        );
        data_proyekLayout.setVerticalGroup(
            data_proyekLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(data_proyekLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(data_proyekLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(b_detail, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtcari, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b_cari, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b_revisi, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b_setuju, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b_tolak, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
                .addContainerGap())
        );

        mainpane.add(data_proyek, "card2");

        detail_proyek.setBackground(new java.awt.Color(255, 255, 255));

        jLabel3.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        jLabel3.setText("DETAIL PROYEK");

        table2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(table2);

        b_kembali.setBackground(new java.awt.Color(42, 37, 98));
        b_kembali.setText("KEMBALI");
        b_kembali.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_kembaliActionPerformed(evt);
            }
        });

        b_step.setBackground(new java.awt.Color(42, 37, 98));
        b_step.setText("detail step");
        b_step.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_stepActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout detail_proyekLayout = new javax.swing.GroupLayout(detail_proyek);
        detail_proyek.setLayout(detail_proyekLayout);
        detail_proyekLayout.setHorizontalGroup(
            detail_proyekLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(detail_proyekLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(detail_proyekLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(detail_proyekLayout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 707, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(detail_proyekLayout.createSequentialGroup()
                        .addGroup(detail_proyekLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addGroup(detail_proyekLayout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(b_step, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(b_kembali, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(12, 504, Short.MAX_VALUE))))
        );
        detail_proyekLayout.setVerticalGroup(
            detail_proyekLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(detail_proyekLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(detail_proyekLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(b_kembali, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b_step, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
                .addContainerGap())
        );

        mainpane.add(detail_proyek, "card2");

        tambah_step.setBackground(new java.awt.Color(255, 255, 255));

        jLabel2.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        jLabel2.setText("TAMBAH STEP PROYEK");

        b_tambah.setBackground(new java.awt.Color(42, 37, 98));
        b_tambah.setText("Tambah");
        b_tambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_tambahActionPerformed(evt);
            }
        });

        b_kembali2.setBackground(new java.awt.Color(42, 37, 98));
        b_kembali2.setText("Kembali");
        b_kembali2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_kembali2ActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        jLabel5.setText("Step Proyek");

        jLabel6.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        jLabel6.setText("Target");

        txtstep.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(42, 37, 98)));
        txtstep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtstepActionPerformed(evt);
            }
        });

        txt_target.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(42, 37, 98)));
        txt_target.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_targetActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        jLabel8.setText("ID Step");

        txtid2.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(42, 37, 98)));
        txtid2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtid2ActionPerformed(evt);
            }
        });

        b_update.setBackground(new java.awt.Color(42, 37, 98));
        b_update.setText("Update");
        b_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_updateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout tambah_stepLayout = new javax.swing.GroupLayout(tambah_step);
        tambah_step.setLayout(tambah_stepLayout);
        tambah_stepLayout.setHorizontalGroup(
            tambah_stepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tambah_stepLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tambah_stepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(tambah_stepLayout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jLabel7))
                    .addGroup(tambah_stepLayout.createSequentialGroup()
                        .addComponent(b_tambah, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(3, 3, 3)
                        .addComponent(b_update, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(b_kembali2, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(tambah_stepLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(tambah_stepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtid2, javax.swing.GroupLayout.PREFERRED_SIZE, 548, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)
                            .addComponent(txtstep, javax.swing.GroupLayout.PREFERRED_SIZE, 548, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)
                            .addComponent(txt_target, javax.swing.GroupLayout.PREFERRED_SIZE, 548, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(159, Short.MAX_VALUE))
        );
        tambah_stepLayout.setVerticalGroup(
            tambah_stepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tambah_stepLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(tambah_stepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(b_tambah, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b_kembali2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b_update, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtid2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addComponent(txtstep, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel6)
                .addGap(18, 18, 18)
                .addComponent(txt_target, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(100, 100, 100)
                .addComponent(jLabel7)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        mainpane.add(tambah_step, "card2");

        detail_step.setBackground(new java.awt.Color(255, 255, 255));

        jLabel4.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        jLabel4.setText("DETAIL STEP PROYEK");

        table3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        table3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table3MouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(table3);

        b_keluar.setBackground(new java.awt.Color(42, 37, 98));
        b_keluar.setText("KEMBALI");
        b_keluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_keluarActionPerformed(evt);
            }
        });

        b_tambah1.setBackground(new java.awt.Color(42, 37, 98));
        b_tambah1.setText("TAMBAH");
        b_tambah1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_tambah1ActionPerformed(evt);
            }
        });

        b_ubah.setBackground(new java.awt.Color(42, 37, 98));
        b_ubah.setText("ubah");
        b_ubah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_ubahActionPerformed(evt);
            }
        });

        b_selesai.setBackground(new java.awt.Color(42, 37, 98));
        b_selesai.setText("selesai");
        b_selesai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_selesaiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout detail_stepLayout = new javax.swing.GroupLayout(detail_step);
        detail_step.setLayout(detail_stepLayout);
        detail_stepLayout.setHorizontalGroup(
            detail_stepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(detail_stepLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(detail_stepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(detail_stepLayout.createSequentialGroup()
                        .addComponent(jScrollPane4)
                        .addContainerGap())
                    .addGroup(detail_stepLayout.createSequentialGroup()
                        .addGroup(detail_stepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addGroup(detail_stepLayout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(b_tambah1, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(b_ubah, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(b_selesai, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(b_keluar, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(12, 347, Short.MAX_VALUE))))
        );
        detail_stepLayout.setVerticalGroup(
            detail_stepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(detail_stepLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(detail_stepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(b_keluar, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b_tambah1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b_ubah, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b_selesai, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
                .addContainerGap())
        );

        mainpane.add(detail_step, "card2");

        add(mainpane, "card2");
    }// </editor-fold>//GEN-END:initComponents

    private void b_detailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_detailActionPerformed
        mainpane.removeAll();
    mainpane.repaint();
    mainpane.revalidate();

    // Menambahkan panel detail proyek
    mainpane.add(detail_proyek);
    mainpane.repaint();
    mainpane.revalidate();
    
    // Mengambil model tabel dan baris yang dipilih
    DefaultTableModel model = (DefaultTableModel) table1.getModel();
    int row = table1.getSelectedRow();
    
    // Validasi jika baris yang dipilih valid
    if (row >= 0) {
        // Kolom pertama dan kedua
        String id_admin = String.valueOf(table1.getValueAt(row, 1));  // ID Admin
        String id_proyek = String.valueOf(table1.getValueAt(row, 2)); // ID Proyek
        String status = String.valueOf(table1.getValueAt(row, 7));
        // Menyimpan data ke dalam map
        tableDataMap.put(id_admin, id_proyek);
        if(status.equalsIgnoreCase("Disetujui")) {
            b_step.setVisible(true);
        }

        // Perbarui tampilan dengan data terkait
        // Pastikan fungsi ini ada dan memperbarui data sesuai ID Proyek
    }
     datatable2();
// TODO add your handling code here:
    }//GEN-LAST:event_b_detailActionPerformed

    private void b_cariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_cariActionPerformed
 try {
        Statement statement =  conek1.GetConnection().createStatement();
        ResultSet res=statement.executeQuery("select  proyek.id_pelaksana,\n" +
"    proyek.id_admin,\n" +
"    proyek.id,\n" +
"    proyek.nama_proyek,\n" +
"    proyek.lokasi,\n" +
"    proyek.estimasi, sum(total) AS TOTAL, proyek.status from PROYEK  join pelaksana on proyek.id_pelaksana = pelaksana.id_pelaksana  join danaproyek on proyek.id = danaproyek.id_proyek where proyek.nama_proyek like '%" + txtcari.getText() + "%' GROUP BY proyek.id_pelaksana, proyek.id_admin, proyek.id, proyek.nama_proyek, proyek.lokasi, proyek.estimasi, proyek.status; ");
       
        DefaultTableModel tbl = new DefaultTableModel();
          tbl.addColumn("ID PELAKSANA");
   tbl.addColumn("ID ADMIN");
        tbl.addColumn("ID PROYEK");
  
    tbl.addColumn("NAMA PROYEK");
    tbl.addColumn("LOKASI PROYEK");
    tbl.addColumn("ESTIMASI");
    tbl.addColumn("TOTAL DANA");
    tbl.addColumn("STATUS");
        
                table1.setModel(tbl);
                                DecimalFormat df = new DecimalFormat("#,###");

                while(res.next())
            {
                 long totalDana = res.getLong("TOTAL");
                tbl.addRow(new Object[] {
                   res.getString("id_pelaksana"),
                res.getString("id_admin"),
               res.getString("id"),
                res.getString("nama_proyek"),
                res.getString("lokasi"),
                res.getString("estimasi"),
                 df.format(totalDana),
                 res.getString("status")
                   
                });
                 table1.setModel(tbl);
            }
        }catch (Exception e) {
            JOptionPane.showMessageDialog(this,"salah");
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_b_cariActionPerformed

    private void b_kembaliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_kembaliActionPerformed
        mainpane.removeAll();
        mainpane.repaint();
        mainpane.revalidate();
        
        mainpane.add(data_proyek);
        mainpane.repaint();
        mainpane.revalidate();
        // TODO add your handling code here:
    }//GEN-LAST:event_b_kembaliActionPerformed

    private void table1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table1MouseClicked
b_detail.setVisible(true);
 b_setuju.setVisible(true);
          b_revisi.setVisible(true);
           b_tolak.setVisible(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_table1MouseClicked

    private void b_revisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_revisiActionPerformed
 if (!tableDataMap.isEmpty()) {
        // Mengambil satu ID proyek dari HashMap
        String idProyek = tableDataMap.values().iterator().next();

    try {
        
        // Simpan ke database
        Statement statement = conek1.GetConnection().createStatement();
      String sql = "update  proyek SET status = 'Revisi' Where id = '" + idProyek + "';";


        statement.executeUpdate(sql);
        statement.close();

        // Notifikasi sukses
       
        JOptionPane.showMessageDialog(null, "Proyek direvisi");

      
 
        // Reset ke pilihan default
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Data gagal disimpan: " + e.getMessage());
    }
    
    }else {
         JOptionPane.showMessageDialog(null, "LIhat Detail Terlebih Dahulu ");
    }
    
   
 datatable1();
        // TODO add your handling code here:
    }//GEN-LAST:event_b_revisiActionPerformed

    private void b_setujuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_setujuActionPerformed
  
    if (!tableDataMap.isEmpty()) {
        // Mengambil satu ID proyek dari HashMap
        String idProyek = tableDataMap.values().iterator().next();

    try {
        
        // Simpan ke database
        Statement statement = conek1.GetConnection().createStatement();
      String sql = "update  proyek SET status = 'Disetujui Manajer' Where id = '" + idProyek + "';";


        statement.executeUpdate(sql);
        statement.close();

        // Notifikasi sukses
       
        JOptionPane.showMessageDialog(null, "Proyek berhasil disetujui");

        // Kosongkan field input
        mainpane.removeAll();
        mainpane.repaint();
        mainpane.revalidate();
        
        mainpane.add(tambah_step);
        mainpane.repaint();
        mainpane.revalidate();
        
        b_update.setVisible(false);
 
        // Reset ke pilihan default
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Data gagal disimpan: " + e.getMessage());
    }
    
    }else {
         JOptionPane.showMessageDialog(null, "LIhat Detail Terlebih Dahulu ");
    }
    
   
 datatable1();

              // TODO add your handling code here:
    }//GEN-LAST:event_b_setujuActionPerformed

    private void b_tolakActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_tolakActionPerformed
        int row = table1.getSelectedRow();  // Mengambil indeks baris yang dipilih
    if (row >= 0) {
        // Tampilkan konfirmasi sebelum menghapus
        int confirm = JOptionPane.showConfirmDialog(this, "Apakah Anda yakin ingin menghapus data ini?", "Konfirmasi Hapus", JOptionPane.YES_NO_OPTION);
        if (confirm == JOptionPane.YES_OPTION) {
            // Mendapatkan ID yang terkait dengan baris yang dipilih
            String id = (String) table1.getValueAt(row, 2);  // Misalnya ID berada di kolom pertama (indeks 0)

            // Menghapus data dari tabel (model tabel)
            DefaultTableModel model = (DefaultTableModel) table1.getModel();
            model.removeRow(row);  // Menghapus baris yang dipilih dari model

            // Menghapus data dari database
            hapusDataDariDatabase(id);

            // Atur ulang tampilan tombol setelah penghapusan
           b_tambah.setVisible(false);
            b_tolak.setVisible(false); // Sembunyikan tombol hapus
            b_keluar.setVisible(false); 
             b_ubah.setVisible(false); 
// Sembunyikan tombol batal
        }
    } else {
        JOptionPane.showMessageDialog(this, "Pilih data yang ingin dihapus terlebih dahulu!", "Peringatan", JOptionPane.WARNING_MESSAGE);
    }
        // TODO add your handling code here:
    }//GEN-LAST:event_b_tolakActionPerformed

    private void b_tambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_tambahActionPerformed
 
    String step = txtstep.getText();
    String target = txt_target.getText();
    String id = txtid2.getText();
   
    
     if (!tableDataMap.isEmpty()) {
        // Mengambil satu ID proyek dari HashMap
        String idProyek = tableDataMap.values().iterator().next();
   
   

    // Validasi input
    if (id.isEmpty() || step.isEmpty() || target.isEmpty()  ) {
        JOptionPane.showMessageDialog(null, "Semua field harus diisi dan admin harus dipilih.");
        return;
    }
   

    try {
        // Simpan ke database
        Statement statement = conek1.GetConnection().createStatement();
      String sql = "INSERT INTO step_proyek ( id_step, step, target, status, Dana_perstep, id_proyek) VALUES ('" 
             + id+ "','"
              +step + "', '"
              + target + "', '', '', '"
            + idProyek+  
           "')";


        statement.executeUpdate(sql);
        statement.close();

        // Notifikasi sukses
       
        JOptionPane.showMessageDialog(null, "Data berhasil disimpan");

        // Kosongkan field input
        
        txtstep.setText("");
        txt_target.setText("");
        txtid2.setText("");
 
        // Reset ke pilihan default
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Data gagal disimpan: " + e.getMessage());
    }
     }
 

      
    }//GEN-LAST:event_b_tambahActionPerformed

    private void b_kembali2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_kembali2ActionPerformed
mainpane.removeAll();
        mainpane.repaint();
        mainpane.revalidate();
        
        mainpane.add(data_proyek);
        mainpane.repaint();
        mainpane.revalidate();
        
        datatable1();          // TODO add your handling code here:
    }//GEN-LAST:event_b_kembali2ActionPerformed

    private void txt_targetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_targetActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_targetActionPerformed

    private void txtstepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtstepActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtstepActionPerformed

    private void b_stepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_stepActionPerformed
        mainpane.removeAll();
        mainpane.repaint();
        mainpane.revalidate();
        
        mainpane.add(detail_step);
        mainpane.repaint();
        mainpane.revalidate();
        
        datatable3();
        // TODO add your handling code here:
    }//GEN-LAST:event_b_stepActionPerformed

    private void b_keluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_keluarActionPerformed
         mainpane.removeAll();
        mainpane.repaint();
        mainpane.revalidate();
        
        mainpane.add(detail_proyek);
        mainpane.repaint();
        mainpane.revalidate();
        // TODO add your handling code here:
    }//GEN-LAST:event_b_keluarActionPerformed

    private void b_tambah1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_tambah1ActionPerformed
         mainpane.removeAll();
        mainpane.repaint();
        mainpane.revalidate();
        
        mainpane.add(tambah_step);
        mainpane.repaint();
        mainpane.revalidate();
        
        datatable3();
        // TODO add your handling code here:
    }//GEN-LAST:event_b_tambah1ActionPerformed

    private void b_ubahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_ubahActionPerformed
        mainpane.removeAll();
    mainpane.repaint();
    mainpane.revalidate();
    
    mainpane.add(tambah_step);
    mainpane.repaint();
    mainpane.revalidate();
    
    // Set tombol yang akan ditampilkan
   b_tambah.setVisible(false);
    b_update.setVisible(true);

    // Ambil data baris yang dipilih di tabel
    int row = table3.getSelectedRow();
    if (row >= 0) {
        // Ambil data dari baris yang dipilih dan set ke dalam form (misalnya textfield)
        String id = (String)table3.getValueAt(row, 1);
        String Step = table3.getValueAt(row, 2).toString();  // Misalnya kolom 1 berisi nama
          String   target= table3.getValueAt(row, 3).toString();
          
        // Isi data ke form edit (sesuaikan dengan komponen form Anda)
          txtid2.setText(String.valueOf(id));
        txtstep.setText(String.valueOf(Step));   // Misalnya field untuk ID
        txt_target.setText(target); 
          
        // Misalnya field untuk nama
    } else {
        JOptionPane.showMessageDialog(this, "Pilih data yang ingin diubah terlebih dahulu!", "Peringatan", JOptionPane.WARNING_MESSAGE);
    } 
        // TODO add your handling code here:
    }//GEN-LAST:event_b_ubahActionPerformed

    private void b_selesaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_selesaiActionPerformed
       DefaultTableModel model = (DefaultTableModel) table3.getModel();
    int row = table3.getSelectedRow();
    
    // Validasi jika baris yang dipilih valid
    if (row >= 0) {
        // Kolom pertama dan kedua
        String idStep = String.valueOf(table3.getValueAt(row, 1));  // ID Admin
        

    try {
        
        // Simpan ke database
        Statement statement = conek1.GetConnection().createStatement();
      String sql = "update  step_proyek SET status = 'Selesai' Where id_step = '" + idStep + "';";


        statement.executeUpdate(sql);
        statement.close();

        // Notifikasi sukses
       
        JOptionPane.showMessageDialog(null, "Step berhasil diselesaikan");

       
 
        // Reset ke pilihan default
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Data gagal disimpan: " + e.getMessage());
    }
    }
    
    
   
 datatable3();
// TODO add your handling code here:
    }//GEN-LAST:event_b_selesaiActionPerformed

    private void table3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table3MouseClicked
        b_ubah.setVisible(true);
        b_selesai.setVisible(true);
        b_keluar.setVisible(true);
        
        
    
    
        // TODO add your handling code here:
    }//GEN-LAST:event_table3MouseClicked

    private void b_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_updateActionPerformed
        String id = txtid2.getText();
String step = txtstep.getText();
String target = txt_target.getText();
    try {
        // Query SQL untuk update data
        String query = "UPDATE step_proyek SET  step = '" + step + "', target = '" + target 
                +  "' WHERE ID_step = '" + id+ "';";
        
        // Gunakan Statement untuk menjalankan query
         Statement stmt =conek1.GetConnection().createStatement();
        stmt.executeUpdate(query); 
         JOptionPane.showMessageDialog(null, "Data berhasil diupdate");// Menjalankan query untuk memperbarui data
    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(this, "Error updating data: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }

    // Sembunyikan form setelah update
    b_tambah.setVisible(true);
    b_update.setVisible(false);
    mainpane.removeAll();
    mainpane.add(detail_step);
    mainpane.repaint();
    mainpane.revalidate();
    
    datatable3();
        // TODO add your handling code here:
    }//GEN-LAST:event_b_updateActionPerformed

    private void txtid2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtid2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtid2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private rojerusan.RSMaterialButtonRectangle b_cari;
    private rojerusan.RSMaterialButtonRectangle b_detail;
    private rojerusan.RSMaterialButtonRectangle b_keluar;
    private rojerusan.RSMaterialButtonRectangle b_kembali;
    private rojerusan.RSMaterialButtonRectangle b_kembali2;
    private rojerusan.RSMaterialButtonRectangle b_revisi;
    private rojerusan.RSMaterialButtonRectangle b_selesai;
    private rojerusan.RSMaterialButtonRectangle b_setuju;
    private rojerusan.RSMaterialButtonRectangle b_step;
    private rojerusan.RSMaterialButtonRectangle b_tambah;
    private rojerusan.RSMaterialButtonRectangle b_tambah1;
    private rojerusan.RSMaterialButtonRectangle b_tolak;
    private rojerusan.RSMaterialButtonRectangle b_ubah;
    private rojerusan.RSMaterialButtonRectangle b_update;
    private javax.swing.JPanel data_proyek;
    private javax.swing.JPanel detail_proyek;
    private javax.swing.JPanel detail_step;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JPanel mainpane;
    private javax.swing.JTable table1;
    private javax.swing.JTable table2;
    private javax.swing.JTable table3;
    private javax.swing.JPanel tambah_step;
    private javax.swing.JTextField txt_target;
    private javax.swing.JTextField txtcari;
    private javax.swing.JTextField txtid2;
    private javax.swing.JTextField txtstep;
    // End of variables declaration//GEN-END:variables

    private void datatable1() {
       
       DefaultTableModel tbl = new DefaultTableModel();
  tbl.addColumn("ID PELAKSANA");
   tbl.addColumn("ID ADMIN");
        tbl.addColumn("ID PROYEK");
  
    tbl.addColumn("NAMA PROYEK");
    tbl.addColumn("LOKASI PROYEK");
    tbl.addColumn("ESTIMASI");
    tbl.addColumn("TOTAL DANA");
    tbl.addColumn("STATUS");
   
   
    table1.setModel(tbl);
    
    try {
        Statement statement =conek1.GetConnection().createStatement();
        
                DecimalFormat df = new DecimalFormat("#,###");

        ResultSet res = statement.executeQuery("select  proyek.id_pelaksana,\n" +
"    proyek.id_admin,\n" +
"    proyek.id,\n" +
"    proyek.nama_proyek,\n" +
"    proyek.lokasi,\n" +
"    proyek.estimasi, sum(total) AS TOTAL, proyek.status from PROYEK  join pelaksana on proyek.id_pelaksana "
                + "= pelaksana.id_pelaksana  join danaproyek on proyek.id = danaproyek.id_proyek where proyek.id_manajer"
                + " = '" + userId + "' GROUP BY proyek.id_pelaksana, proyek.id_admin, proyek.id, proyek.nama_proyek, "
                        + "proyek.lokasi, proyek.estimasi, proyek.status; ");
        
        while (res.next()) {
             long totalDana = res.getLong("TOTAL");
            tbl.addRow(new Object[]{
                res.getString("id_pelaksana"),
                res.getString("id_admin"),
               res.getString("id"),
                res.getString("nama_proyek"),
                res.getString("lokasi"),
                res.getString("estimasi"),
                df.format(totalDana),
                 res.getString("status")
                 
                    
               
            });
        }
    } catch (Exception e) {
        e.printStackTrace(); 
          JOptionPane.showMessageDialog(this, "Gagal memuat data: " + e.getMessage());  
       
    }   }

   private void datatable2() {
    // Pastikan tableDataMap tidak kosong
    if (!tableDataMap.isEmpty()) {
        // Mengambil satu ID proyek dari HashMap
        String idProyek = tableDataMap.values().iterator().next();
        

        // Menyiapkan table model
        DefaultTableModel tbl = new DefaultTableModel();
        tbl.addColumn("ID PROYEK");
        tbl.addColumn("ID DANA");
        tbl.addColumn("DANA");
        tbl.addColumn("TOTAL");

        // Set table model untuk table2
        table2.setModel(tbl);

        try {
            // Membuat statement dari koneksi
            Statement statement = conek1.GetConnection().createStatement();
                            DecimalFormat df = new DecimalFormat("#,###");


            // Menjalankan query untuk mengambil data berdasarkan ID proyek
            String sql = "SELECT * FROM danaproyek WHERE id_proyek = '" + idProyek + "'";
            ResultSet res = statement.executeQuery(sql);

            // Menambahkan data ke dalam table model
            while (res.next()) {
                             long totalDana = res.getLong("TOTAL");

                tbl.addRow(new Object[]{
                    res.getString("id_proyek"),
                    res.getString("id_dana"),
                    res.getString("dana"),
                    df.format(totalDana)
                });
            }

            // Menutup result set dan statement
            res.close();
            statement.close();
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Gagal memuat data: " + e.getMessage());
        }
    } 
}

    private void datatable3() {
        if (!tableDataMap.isEmpty()) {
        // Mengambil satu ID proyek dari HashMap
        String idProyek = tableDataMap.values().iterator().next();
        

        // Menyiapkan table model
        DefaultTableModel tbl = new DefaultTableModel();
        tbl.addColumn("ID PROYEK");
        tbl.addColumn("ID STEP");
        tbl.addColumn("STEP");
        tbl.addColumn("TARGET");
         tbl.addColumn("STATUS");

        // Set table model untuk table2
        table3.setModel(tbl);

        try {
            // Membuat statement dari koneksi
            Statement statement = conek1.GetConnection().createStatement();

            // Menjalankan query untuk mengambil data berdasarkan ID proyek
            String sql = "SELECT * FROM step_proyek WHERE id_proyek = '" + idProyek + "'";
            ResultSet res = statement.executeQuery(sql);

            // Menambahkan data ke dalam table model
            while (res.next()) {
                tbl.addRow(new Object[]{
                     res.getString("id_proyek"),
                    res.getString("id_step"),
                    
                    res.getString("step"),
                    res.getString("target"),
                     res.getString("status")
                   
                });
            }

            // Menutup result set dan statement
            res.close();
            statement.close();
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Gagal memuat data: " + e.getMessage());
        }  
        } 
    }

    private void hapusDataDariDatabase(String id) {
        String query2 = "DELETE FROM danaproyek WHERE id_proyek = '" + id +  "';";
        String query1 = "DELETE FROM proyek WHERE  id = '" + id +  "';";
        
        try ( Statement stmt =conek1.GetConnection().createStatement();
                ) {
             stmt.executeUpdate(query2);
            stmt.executeUpdate(query1);
           // Eksekusi query untuk menghapus data
        } catch (SQLException e) {
            e.printStackTrace();  // Menampilkan error jika ada masalah
        }
    }
  }

