
import Koneksi.conek1;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Collection;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */

/**
 *
 * @author Acer
 */
public class MenuAprove1 extends javax.swing.JPanel {
private String username;
private String userIdi;

    /**
     * Creates new form MenuManager
     */
   

    /**
     * Creates new form MenuManager
     */
    
                

    

    /**
     * Creates new form MenuManager
     */
    /**
     * Creates new form MenuManager
     */
  

    /**
     * Creates new form MenuManager
     */
    /**
     * Creates new form MenuManager
     */
    /**
     * Creates new form MenuManager
     */
    /**
     * Creates new form MenuManager
     */
    public MenuAprove1(String username, String userIdi) {
        initComponents();
        this.username = username;
        this.userIdi = userIdi;
        b_setuju.setVisible(false);
        b_revisi.setVisible(false);
        b_tolak.setVisible(false);
        cmbbayar.setVisible(false);
        cmbtahap.setVisible(false);
        lbjumlah.setVisible(false);
        txtjumlah.setVisible(false);
        lbpersen.setVisible(false);
        datatable1();
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainpane = new javax.swing.JPanel();
        data_proyek = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table1 = new javax.swing.JTable();
        b_setuju = new rojerusan.RSMaterialButtonRectangle();
        txtcari = new javax.swing.JTextField();
        b_cari = new rojerusan.RSMaterialButtonRectangle();
        cmbbayar = new javax.swing.JComboBox<>();
        cmbtahap = new javax.swing.JComboBox<>();
        lbjumlah = new javax.swing.JLabel();
        txtjumlah = new javax.swing.JTextField();
        lbpersen = new javax.swing.JLabel();
        b_tolak = new rojerusan.RSMaterialButtonRectangle();
        b_revisi = new rojerusan.RSMaterialButtonRectangle();

        setBorder(javax.swing.BorderFactory.createMatteBorder(0, 2, 0, 0, new java.awt.Color(42, 37, 98)));
        setLayout(new java.awt.CardLayout());

        mainpane.setBackground(new java.awt.Color(255, 255, 255));
        mainpane.setLayout(new java.awt.CardLayout());

        data_proyek.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        jLabel1.setText("DATA PROYEK");

        table1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        table1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table1);

        b_setuju.setBackground(new java.awt.Color(42, 37, 98));
        b_setuju.setText("setuju");
        b_setuju.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_setujuActionPerformed(evt);
            }
        });

        txtcari.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(42, 37, 98)));

        b_cari.setBackground(new java.awt.Color(42, 37, 98));
        b_cari.setText("cari");
        b_cari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_cariActionPerformed(evt);
            }
        });

        cmbbayar.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-Metode Bayar -", "Transfer Mandiri", "Transfer BNI", "Transfer BRI", "Transfer BCA" }));

        cmbtahap.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "- Pencairan Tahap -", "Tahap 1", "Tahap 2", "Tahap 3" }));

        lbjumlah.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        lbjumlah.setText("Jumlah :");

        txtjumlah.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(42, 37, 98)));

        lbpersen.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        lbpersen.setText("%");

        b_tolak.setBackground(new java.awt.Color(42, 37, 98));
        b_tolak.setText("tolak");
        b_tolak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_tolakActionPerformed(evt);
            }
        });

        b_revisi.setBackground(new java.awt.Color(42, 37, 98));
        b_revisi.setText("revisi");
        b_revisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_revisiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout data_proyekLayout = new javax.swing.GroupLayout(data_proyek);
        data_proyek.setLayout(data_proyekLayout);
        data_proyekLayout.setHorizontalGroup(
            data_proyekLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(data_proyekLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(data_proyekLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(data_proyekLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 707, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(data_proyekLayout.createSequentialGroup()
                        .addGroup(data_proyekLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(data_proyekLayout.createSequentialGroup()
                                .addComponent(b_setuju, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(b_revisi, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(b_tolak, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtcari, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(b_cari, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12))
                    .addGroup(data_proyekLayout.createSequentialGroup()
                        .addComponent(cmbbayar, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(cmbtahap, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lbjumlah)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtjumlah, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbpersen)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        data_proyekLayout.setVerticalGroup(
            data_proyekLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(data_proyekLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(data_proyekLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(b_setuju, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtcari, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b_cari, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b_tolak, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b_revisi, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(data_proyekLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbbayar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbtahap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbjumlah)
                    .addComponent(txtjumlah, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbpersen))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        mainpane.add(data_proyek, "card2");

        add(mainpane, "card2");
    }// </editor-fold>//GEN-END:initComponents

    private void b_setujuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_setujuActionPerformed
      
    
   // Mengambil model tabel dan baris yang dipilih
DefaultTableModel model = (DefaultTableModel) table1.getModel();
int row = table1.getSelectedRow();

// Validasi jika baris yang dipilih valid
if (row >= 0) {
    // Kolom pertama dan kedua
    // ID Proyek
    String id_transaksi = String.valueOf(table1.getValueAt(row, 1)); 
    String id_proyek = String.valueOf(table1.getValueAt(row, 2)); // ID Proyek

    // Menyimpan data ke dalam map
    String metodeDipilih = (String) cmbbayar.getSelectedItem();
    if (metodeDipilih.equalsIgnoreCase("- Metode Bayar -") || metodeDipilih == null) {
        JOptionPane.showMessageDialog(null, "Pilih metode bayar terlebih dahulu.");
        return;
    }
    String metodebayar = metodeDipilih;

    String tahapDipilih = (String) cmbtahap.getSelectedItem();
    if (tahapDipilih.equalsIgnoreCase("- Pencairan Tahap -") || tahapDipilih == null) {
        JOptionPane.showMessageDialog(null, "Pilih pencairan tahap terlebih dahulu.");
        return;
    }
    String pencairan = tahapDipilih;

    try {
        Connection conn = conek1.GetConnection();
        Statement statement = conn.createStatement();
        
        // Query untuk mengambil data transaksi berdasarkan userIdi (ID investor)
        String queryTransaksi = "SELECT * FROM transaksi WHERE ID_investor = '" + userIdi + "' AND ID_proyek"
                + " = '" + id_proyek + "';";
        ResultSet res = statement.executeQuery(queryTransaksi);

        // Ambil jumlah investasi dari input pengguna
        long jumlah = Long.parseLong(txtjumlah.getText());

        // Mengambil data total_dana dari query result
        if (res.next()) {
            String totaldanast = res.getString("total_dana").replace(".", "");
            long totaldana = Long.parseLong(totaldanast);

            // Menghitung jumlah investasi berdasarkan persentase yang dimasukkan
            String jmlhinvestasi = String.valueOf((totaldana / 100) * jumlah);

            // Update kolom total_investasi pada tabel transaksi dan status transaksi
            String updateTransaksiQuery = "UPDATE transaksi SET total_investasi = '" + jmlhinvestasi + "', "+"metode_transaksi = '"+metodebayar +"', "
                    + "status_transaksi = 'Disetujui', Pencairan_tahap = '"+ pencairan+ "',"+"tanggal_transaksi = NOW() WHERE ID_transaksi = '" + 
                    id_transaksi + "' AND ID_proyek = '" + id_proyek + "';";
            statement.executeUpdate(updateTransaksiQuery);
            
            // Ambil data dana dari tabel danainvestor
            String queryDana = "SELECT dana FROM danainvestor WHERE ID_investor = '" + userIdi + "';";
            ResultSet resDana = statement.executeQuery(queryDana);
            
            if (resDana.next()) {
                String danaSt = resDana.getString("dana").replace(".", "");
                long dana = Long.parseLong(danaSt);

                // Kurangi dana dengan jumlah investasi
                Long sisaDana = dana - Long.parseLong(jmlhinvestasi);

                // Update dana di tabel danainvestor
                String updateDanaQuery = "UPDATE danainvestor SET dana = '" + sisaDana + "' WHERE ID_investor "
                        + "= '" + userIdi + "';";
                statement.executeUpdate(updateDanaQuery);
            } else {
                JOptionPane.showMessageDialog(null, "Data dana untuk investor tidak ditemukan.");
            }

            resDana.close();
        } else {
            JOptionPane.showMessageDialog(null, "Data transaksi tidak ditemukan.");
        }

        res.close();
        statement.close();
        
    } catch (SQLException e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(null, "Terjadi kesalahan dalam pengambilan data.");
    }

    // Perbarui tampilan data tabel setelah proses selesai
    datatable1();
}



// TODO add your handling code here:
    }//GEN-LAST:event_b_setujuActionPerformed

    private void b_cariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_cariActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_b_cariActionPerformed

    private void table1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table1MouseClicked
  b_setuju.setVisible(true);
        b_revisi.setVisible(true);
        b_tolak.setVisible(true);
        cmbbayar.setVisible(true);
        cmbtahap.setVisible(true);
        lbjumlah.setVisible(true);
        txtjumlah.setVisible(true);
        lbpersen.setVisible(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_table1MouseClicked

    private void b_tolakActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_tolakActionPerformed
int row = table1.getSelectedRow();
    if (row >= 0) {
        // Ambil data dari baris yang dipilih dan set ke dalam form (misalnya textfield)
        String id_proyek = (String)table1.getValueAt(row, 2);
         String id_transaksi = (String)table1.getValueAt(row, 1);
         
         try {
        
        // Simpan ke database
        Statement statement = conek1.GetConnection().createStatement();
      String sql = "Update `transaksi` set status_transaksi = 'Tolak' where id_proyek = '" + id_proyek +"' and id_transaksi = '"+ id_transaksi +"';";

        statement.executeUpdate(sql);
        statement.close();

        // Notifikasi sukses
       
        JOptionPane.showMessageDialog(null, "PEngajuan Ditolak");

 
        // Reset ke pilihan default
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Data gagal disimpan: " + e.getMessage());
    }
        
    }else {
        JOptionPane.showMessageDialog(this, "Pilih data yang ingin diubah terlebih dahulu!", "Peringatan", JOptionPane.WARNING_MESSAGE);
    } 
    datatable1();
        // TODO add your handling code here:
    }//GEN-LAST:event_b_tolakActionPerformed

    private void b_revisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_revisiActionPerformed
int row = table1.getSelectedRow();
    if (row >= 0) {
        // Ambil data dari baris yang dipilih dan set ke dalam form (misalnya textfield)
        String id_proyek = (String)table1.getValueAt(row, 2);
         String id_transaksi = (String)table1.getValueAt(row, 1);
        
         
         try {
        
        // Simpan ke database
        Statement statement = conek1.GetConnection().createStatement();
      String sql = "Update `transaksi` set status_transaksi = 'Revisi' where id_proyek = '" + id_proyek +"' and id_transaksi = '"+ id_transaksi +"';";

        statement.executeUpdate(sql);
        statement.close();

        // Notifikasi sukses
       
        JOptionPane.showMessageDialog(null, "Revisi Dikirim");

 
        // Reset ke pilihan default
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Data gagal disimpan: " + e.getMessage());
    }
        
    }else {
        JOptionPane.showMessageDialog(this, "Pilih data yang ingin diubah terlebih dahulu!", "Peringatan", JOptionPane.WARNING_MESSAGE);
    } 
        datatable1();

        // TODO add your handling code here:
    }//GEN-LAST:event_b_revisiActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private rojerusan.RSMaterialButtonRectangle b_cari;
    private rojerusan.RSMaterialButtonRectangle b_revisi;
    private rojerusan.RSMaterialButtonRectangle b_setuju;
    private rojerusan.RSMaterialButtonRectangle b_tolak;
    private javax.swing.JComboBox<String> cmbbayar;
    private javax.swing.JComboBox<String> cmbtahap;
    private javax.swing.JPanel data_proyek;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbjumlah;
    private javax.swing.JLabel lbpersen;
    private javax.swing.JPanel mainpane;
    private javax.swing.JTable table1;
    private javax.swing.JTextField txtcari;
    private javax.swing.JTextField txtjumlah;
    // End of variables declaration//GEN-END:variables

    private void datatable1() {
        DefaultTableModel tbl = new DefaultTableModel();
tbl.addColumn("NAMA PERUSAHAAN");
tbl.addColumn("ID Transaksi");

tbl.addColumn("ID PROYEK");
tbl.addColumn("NAMA PROYEK");
tbl.addColumn("METODE TRANSAKSI");
tbl.addColumn("DANA PROYEK");
tbl.addColumn("JUMLAH INVESTASI");
tbl.addColumn("TANGGAL PENGAJUAN");
tbl.addColumn("TANGGAL TRANSAKSI");
tbl.addColumn("TAHAP");
tbl.addColumn("STATUS SUPERVISOR");
tbl.addColumn("STATUS ANALIS");
tbl.addColumn("STATUS TRANSAKSI");



table1.setModel(tbl);

try {
     Connection conn = conek1.GetConnection();
    Statement statement = conn.createStatement();
    // Validasi input userIdP untuk mencegah SQL injection
    if (userIdi == null || userIdi.isEmpty()) {
        throw new IllegalArgumentException("ID Investor tidak valid");
    }

    // Jalankan query SQL
    ResultSet res = statement.executeQuery(
        "SELECT * FROM transaksi left join status_investor on transaksi.id_transaksi = status_investor.id_transaksi WHERE transaksi.ID_investor = '" + userIdi+ "';"
    );

    // Ambil hasil query dan tambahkan ke tabel
    while (res.next()) {
        tbl.addRow(new Object[]{
            res.getString("nama_perusahaan"),
                        res.getString("ID_transaksi"),

            res.getString("ID_proyek"),
            res.getString("nama_proyek"),
            
            res.getString("metode_transaksi"),
            res.getString("total_dana"),
            res.getString("total_investasi"),
            res.getString("tanggal_pengajuan"),
            res.getString("tanggal_transaksi"),
            res.getString("pencairan_tahap"),
            res.getString("status_supervisor"),
            res.getString("status_analis"),
                        res.getString("status_transaksi")

        });
    }

    res.close();
    statement.close();
} catch (SQLException e) {
    e.printStackTrace();
    JOptionPane.showMessageDialog(this, "Gagal memuat data: " + e.getMessage());
} catch (IllegalArgumentException e) {
    JOptionPane.showMessageDialog(this, e.getMessage());
}   }

  
}

