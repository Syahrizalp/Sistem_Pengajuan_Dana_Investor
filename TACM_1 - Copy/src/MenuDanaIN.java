
import Koneksi.conek1;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DecimalFormat;
import java.util.Collection;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */

/**
 *
 * @author Acer
 */
public class MenuDanaIN extends javax.swing.JPanel {
private String username;
private String userIdinvestor;

    /**
     * Creates new form MenuManager
     */
   

    /**
     * Creates new form MenuManager
     */
    
                

    

    /**
     * Creates new form MenuManager
     */
    /**
     * Creates new form MenuManager
     */
  

    /**
     * Creates new form MenuManager
     */
    /**
     * Creates new form MenuManager
     */
    /**
     * Creates new form MenuManager
     */
    /**
     * Creates new form MenuManager
     */
    public MenuDanaIN(String username, String userIdinvestor) {
        initComponents();
        this.username = username;
        this.userIdinvestor = userIdinvestor;
       
     
        totaldana();
        
       
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainpane = new javax.swing.JPanel();
        data_proyek = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lbjumlah = new javax.swing.JLabel();
        txttambah = new javax.swing.JTextField();
        b_tambah = new rojerusan.RSMaterialButtonRectangle();
        lbjumlah1 = new javax.swing.JLabel();
        txttotal = new javax.swing.JTextField();

        setBorder(javax.swing.BorderFactory.createMatteBorder(0, 2, 0, 0, new java.awt.Color(42, 37, 98)));
        setLayout(new java.awt.CardLayout());

        mainpane.setBackground(new java.awt.Color(255, 255, 255));
        mainpane.setLayout(new java.awt.CardLayout());

        data_proyek.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        jLabel1.setText("DANA INVESTOR");

        lbjumlah.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        lbjumlah.setText("TAMBAH DANA :");

        txttambah.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(42, 37, 98)));

        b_tambah.setBackground(new java.awt.Color(42, 37, 98));
        b_tambah.setText("Tambah");
        b_tambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_tambahActionPerformed(evt);
            }
        });

        lbjumlah1.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        lbjumlah1.setText("TOTAL DANA :");

        txttotal.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(42, 37, 98)));

        javax.swing.GroupLayout data_proyekLayout = new javax.swing.GroupLayout(data_proyek);
        data_proyek.setLayout(data_proyekLayout);
        data_proyekLayout.setHorizontalGroup(
            data_proyekLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(data_proyekLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(12, 615, Short.MAX_VALUE))
            .addGroup(data_proyekLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(data_proyekLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(data_proyekLayout.createSequentialGroup()
                        .addComponent(lbjumlah1)
                        .addGap(18, 18, 18)
                        .addComponent(txttotal)
                        .addGap(35, 35, 35))
                    .addGroup(data_proyekLayout.createSequentialGroup()
                        .addComponent(b_tambah, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(data_proyekLayout.createSequentialGroup()
                        .addComponent(lbjumlah)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txttambah)
                        .addGap(28, 28, 28))))
        );
        data_proyekLayout.setVerticalGroup(
            data_proyekLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(data_proyekLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(data_proyekLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txttambah, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbjumlah))
                .addGap(29, 29, 29)
                .addGroup(data_proyekLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(data_proyekLayout.createSequentialGroup()
                        .addComponent(b_tambah, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addComponent(lbjumlah1))
                    .addComponent(txttotal, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(215, Short.MAX_VALUE))
        );

        mainpane.add(data_proyek, "card2");

        add(mainpane, "card2");
    }// </editor-fold>//GEN-END:initComponents

    private void b_tambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_tambahActionPerformed
 String tambahdana = txttambah.getText();
 try {
        
        // Simpan ke database
        Statement statement = conek1.GetConnection().createStatement();
      String sql = "INSERT INTO `danainvestor`(`dana`, `id_investor`) VALUES ('"+ tambahdana +"','"+userIdinvestor +"')";

        statement.executeUpdate(sql);
        statement.close();

        // Notifikasi sukses
       
        JOptionPane.showMessageDialog(null, "Dana Berhasil Ditambahkan");
txttambah.setText("");
 
        // Reset ke pilihan default
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Data gagal disimpan: " + e.getMessage());
    }
        
    
     totaldana();  

    }//GEN-LAST:event_b_tambahActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private rojerusan.RSMaterialButtonRectangle b_tambah;
    private javax.swing.JPanel data_proyek;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lbjumlah;
    private javax.swing.JLabel lbjumlah1;
    private javax.swing.JPanel mainpane;
    private javax.swing.JTextField txttambah;
    private javax.swing.JTextField txttotal;
    // End of variables declaration//GEN-END:variables

   

private void totaldana() {
    try {
        // Membuat koneksi dan statement
        Statement statement = conek1.GetConnection().createStatement();

        // Query untuk mendapatkan total dana
        String queryDana = "SELECT SUM(dana) AS total FROM danainvestor WHERE ID_investor = '" + userIdinvestor + "';";
        ResultSet resDana = statement.executeQuery(queryDana);

        // Memproses hasil query
        if (resDana.next()) {
            String danaSt = resDana.getString("total");
            if (danaSt != null) {
                // Format angka
                double dana = Double.parseDouble(danaSt);
                DecimalFormat df = new DecimalFormat("#,###");
                txttotal.setText(df.format(dana)); // Memformat angka dengan pemisah ribuan
            } else {
                txttotal.setText("0");
            }
        } else {
            txttotal.setText("0");
        }

        // Menutup resources
        resDana.close();
        statement.close();

    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Gagal memuat total dana: " + e.getMessage());
    }
}



    
}

